name: 'Docker Build and Publish Action'
description: 'Sets up the environment and builds and pushes a Docker image to AWS ECR.'
author: 'rdeak'
runs:
  using: 'composite'
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.aws_role_name }}
        aws-region: ${{ inputs.aws_region }}

    - name: Log in to Amazon ECR
      shell: bash
      run: |
        aws ecr get-login-password --region ${{ inputs.aws_region }} | docker login --username AWS --password-stdin ${{ inputs.aws_account_id }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ inputs.aws_account_id }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/${{ inputs.aws_ecr_name }}:${{ inputs.release_tag }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Log out of Amazon ECR
      shell: bash
      run: docker logout ${{ inputs.aws_account_id }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com

inputs:
  release_tag:
    description: 'The release tag to apply to the Docker image'
    required: true
  aws_account_id:
    description: 'AWS account ID'
    required: true
  aws_role_name:
    description: 'AWS role name to assume'
    required: true
  aws_region:
    description: 'AWS region where ECR is located'
    required: true
  aws_ecr_name:
    description: 'ECR repository name'
    required: true
